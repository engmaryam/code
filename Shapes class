// abstract classs shape
package shapesrock;

public abstract class Shape extends Object {

    abstract public double getArea();
    
    abstract public double getPerimeter();
}


_____


// circle class
  
package shapesrock;

public class Circle extends Shape {
    
    private double radius;

    public Circle() {
        this.radius = 1;
    }
    
    public Circle(double radius) {
        this.radius = radius;
    }
    
    @Override
    public double getArea() {
        return Math.PI * this.radius * this.radius;
    }
    
    @Override
    public double getPerimeter() {
        return 2 * Math.PI * this.radius;
    }
}
____________
package shapesrock;

public class Rectangle extends Shape {
    
    protected double length;
    protected double width;
    
    public Rectangle() {
        this.length = 2;
        this.width = 1;
    }
    
    public Rectangle(double length, double width) {
        this.length = length;
        this.width = width;
    }
    
    @Override
    public double getArea() {
        return length * width;
    }
    
    @Override
    public double getPerimeter() {
        return length + length + width + width;
    }

    public double getLength() {
        return length;
    }

    public void setLength(double length) {
        this.length = length;
    }

    public double getWidth() {
        return width;
    }

    public void setWidth(double width) {
        this.width = width;
    }
}
__________________________

// Square class

package shapesrock;

public class Square extends Rectangle {
    
    public Square() {
        this.length = 1;
        this.width = 1;
    }
    
    public Square(double height, double width) {
        this();
        
        if (height == 0 || width == 0 || width != height) {
            System.out.println("That's illegal. I'm giving a default square.");
        }
        else {
            this.length = height;
            this.width = width;
        }
    }
    
    @Override
    public String toString() {
        return "A Square.\n" + "Height: " + this.length + "\nWidth: " + this.width;
    }
}
______________________________________

 //Tringle class
 
 
package shapesrock;

public class Triangle extends Shape {

    private double side1;
    private double side2;
    private double side3;
    
    public Triangle() {
        this.side1 = 1;
        this.side2 = 1;
        this.side3 = 1;
    }
    
    public Triangle(double side1, double side2, double side3) {
        this();
        
        if (side1 + side2 > side3 && side2 + side3 > side1 && 
                side1 + side3 > side2) {
            this.side1 = side1;
            this.side2 = side2;
            this.side3 = side3;
        }
        else {
            System.out.println("That's illegal. I'm giving you the default.");
        }
    }
    
    @Override
    public double getPerimeter() {
        return this.side1 + this.side2 + this.side3;
    }
    
    @Override
    public double getArea() {
        double p = getPerimeter() / 2;
        return Math.sqrt(p * ((p - side1) * (p - side2) * (p - side3)));
    }
}



___________________________

// main
package shapesrock;

import apple.laf.JRSUIConstants;
import java.util.ArrayList;
import shapesrock.Circle;
import shapesrock.Rectangle;
import shapesrock.Shape;
import shapesrock.Square;
import shapesrock.Triangle;

public class ShapesRock {

    public static void main(String[] args) {

        //Create a Circle
        Circle c = new Circle(4);
        //Print perimeter
        System.out.println("Circle perimeter: " + c.getPerimeter());
        //Print area
        System.out.println("Circle area: " + c.getArea());

        //Create a Rectangle
        Rectangle rect = new Rectangle(10, 5);
        //Print perimeter
        System.out.println("Rect perimeter: " + rect.getPerimeter());
        //Print area
        System.out.println("Rect area: " + rect.getArea());

        //Create a Square
        Square square = new Square(10, 10);
        System.out.println(square);
        //Print perimeter
        System.out.println("Square perimeter: " + square.getPerimeter());
        //Print area
        System.out.println("Square area: " + square.getArea());

        //Create a Triangle
        Triangle t = new Triangle(3, 4, 5);
        //Print perimeter
        System.out.println("Triangle perimeter: " + t.getPerimeter());
        //Print area
        System.out.println("Triangle area: " + t.getArea());
package shapesrock;

import apple.laf.JRSUIConstants;
import java.util.ArrayList;
import shapesrock.Circle;
import shapesrock.Rectangle;
import shapesrock.Shape;
import shapesrock.Square;
import shapesrock.Triangle;

public class ShapesRock {

    public static void main(String[] args) {

        //Create a Circle
        Circle c = new Circle(4);
        //Print perimeter
        System.out.println("Circle perimeter: " + c.getPerimeter());
        //Print area
        System.out.println("Circle area: " + c.getArea());

        //Create a Rectangle
        Rectangle rect = new Rectangle(10, 5);
        //Print perimeter
        System.out.println("Rect perimeter: " + rect.getPerimeter());
        //Print area
        System.out.println("Rect area: " + rect.getArea());

        //Create a Square
        Square square = new Square(10, 10);
        System.out.println(square);
        //Print perimeter
        System.out.println("Square perimeter: " + square.getPerimeter());
        //Print area
        System.out.println("Square area: " + square.getArea());

        //Create a Triangle
        Triangle t = new Triangle(3, 4, 5);
        //Print perimeter
        System.out.println("Triangle perimeter: " + t.getPerimeter());
        //Print area
        System.out.println("Triangle area: " + t.getArea());
